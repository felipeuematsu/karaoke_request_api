# This is a basic workflow to help you get started with Actions
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/flutter_release.yml'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  # This workflow contains a single job called "build"
  build:
    outputs:
      version: ${{ steps.version.outputs.data }}
      exists: ${{ steps.checkTag.outputs.exists }}
    name: flutter build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      JAVA_VERSION: "11.0"
      FLUTTER_VERSION: "3.13.1"
    steps:
      - uses: actions/checkout@v2
      - name: Read pubspec.yaml
        uses: jbutcher5/read-yaml@1.6
        id: version
        with:
          file: './pubspec.yaml'
          key-path: '["version"]'

      - run: "echo 'Current Version: ${{ steps.version.outputs.data }}'"
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter analyze --no-fatal-warnings --no-fatal-infos

      - uses: mukunku/tag-exists-action@v1.2.0
        id: checkTag
        with:
          tag: "${{ steps.version.outputs.data }}"

      - name: Create Release
        if: steps.checkTag.outputs.exists == 'false'
        uses: avakar/tag-and-release@v1
        with:
          tag_name: "${{ steps.version.outputs.data }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

